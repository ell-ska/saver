generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?

  accounts Account[]
  members  Member[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  access_token      String?
  refresh_token     String?
  token_type        String?
  scope             String?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum Role {
  OWNER
  COLLABORATOR
  GUEST
}

model Member {
  id   String @id @default(cuid())
  role Role

  userId  String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  boardId String
  board   Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Board {
  id          String  @id @default(cuid())
  title       String
  description String?
  isFavorite  Boolean @default(false)
  isArchived  Boolean @default(false)
  // order       Int

  parentBoardId String?
  parentBoard   Board?  @relation("parentBoardChildBoards", fields: [parentBoardId], references: [id])
  childBoards   Board[] @relation("parentBoardChildBoards")

  members Member[]
  cards   Card[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum CardType {
  IMAGE
  LINK
}

enum Width {
  HALF
  FULL
}

model Card {
  id         String  @id @default(cuid())
  caption    String?
  width      Width   @default(HALF)
  isArchived Boolean @default(false)
  // order      Int

  type  CardType
  image Image?
  link  Link?

  parentBoardId String
  parentBoard   Board  @relation(fields: [parentBoardId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Orientation {
  LANDSCAPE
  PORTRAIT
}

enum AspectRatio {
  ORIGINAL
  ONE_TO_ONE
  THREE_TO_FOUR
  NINE_TO_SIXTEEN
}

model Image {
  id          String      @id @default(cuid())
  url         String
  orientation Orientation @default(LANDSCAPE)
  aspectRatio AspectRatio @default(ORIGINAL)
  width       Int
  height      Int

  cardId String? @unique
  card   Card?   @relation(fields: [cardId], references: [id], onDelete: Cascade)
  link   Link?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Link {
  id          String  @id @default(cuid())
  url         String
  title       String?
  description String?
  faviconUrl  String?

  imageId String? @unique
  image   Image?  @relation(fields: [imageId], references: [id], onDelete: Cascade)
  cardId  String  @unique
  card    Card    @relation(fields: [cardId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
